{response: true, quiz: {name: Quiz 05, question: [{type: 1, stem: Which of the following statements about the MaterialApp widget is incorrect? , answer: 4, option: [It is a convenience widget that wraps widgets required for Google's  material design apps. , It provided several properties such as title, color, theme, and home., Its <em>home</em> property specifies the start screen of the app., All Flutter apps must start with it, i.e., have it as the top-level  widget. ]}, {type: 1, stem: It doesn't matter if you're developing for iOS, you can still use the MaterialApp widget as the top-level widget. , answer: 1, option: [true, false]}, {type: 1, stem: For each screen of your app, you use a scaffolding widget that implements the basic layout structure of a screen. The Scaffold widget takes care of many common app UI elements for you, and provides a number of properties for this, including all of the following except for: , answer: 1, option: [title, body, drawer, bottomNavigationBar, floatingActionButton]}, {type: 2, stem: The Text widget displays a string of text in a single style. Its _______________ property is interesting in that it tells Flutter what to do when the text overflows the bounds of its container; allowed values are TexOverflow.clip, TextOverflow.ellipsis, TexOverflow.fade, and TexOverflow.visible. , answer: [overflow]}, {type: 2, stem: The _______________ widget has a single child, and centers its child within itself. , answer: [Center]}, {type: 2, stem: The Row widget displays its children in a horizontal array. The _______________ property specifies the array of child widgets to be displayed. , answer: [children]}, {type: 1, stem: The Column widget displays its children in a vertical array. If you want to align its children horizontally, you use this property that has values such as start, center, and end. , answer: 2, option: [mainAxisAlignment, crossAxisAlignment]}, {type: 2, stem: The _______________ widget serves a similar purpose to the Center widget but has more flexibility in that it's not just for centering content. It aligns its child within itself (property: alignment) and can also optionally size itself based on the child's size (properties: widthFactor and heightFactor). , answer: [Align]}, {type: 2, stem: The _______________ widget causes its child to fill all available space. It is commonly used as a child of widgets like Row and Column. , answer: [Expanded]}, {type: 2, stem: The _______________ widget is, along with Row and Column, probably one of the most-used widgets that Flutter offers for laying out your UI. It is a bit of a jack-of-all-trades in that it combines what a number of other widgets provide into one sleek package -- painting, positioning, and sizing widgets. , answer: [Container]}]}}