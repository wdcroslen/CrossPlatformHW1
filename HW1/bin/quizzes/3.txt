{response: true, quiz: {name: Quiz 03, question: [{type: 1, stem: In Dart, everything (data) is an object,  and every object is an instance of a class. , answer: 1, option: [true, false]}, {type: 1, stem: All references to fields are invocations of special access methods called <em>getters</em> and <em>setters</em>. , answer: 1, option: [true, false]}, {type: 1, stem: Consider an instance variable declared as "int x;". Which of the following statements is incorrect? , answer: 2, option: [It is initialized with a value of null., It is a private field in that it is invisible outside  the declared class. , Dart will automatically generate a getter method for it., A setter method is also automatically generated by Dart.]}, {type: 1, stem: Consider a constructor declared as "Person(this.name);".  Which of the following statements is correct? , answer: 3, option: [It isn't well-formed., It is an abstract constructor., It is equivalent to "Person(name): this.name = name;"., It is a named constructor.]}, {type: 1, stem: Consider a class, say C, with a member declared as "get x;". You must declare C as an abstract class using the "abstract" keyword. , answer: 1, option: [true, false]}, {type: 1, stem: Dart supports multiple inheritance in that a class may have more than one <em>direct</em> superclass. , answer: 2, option: [true, false]}, {type: 1, stem: In Dart, every class implicitly defines an interface that describes what methods are available on its instances. There is no explicit interface declaration syntax. , answer: 1, option: [true, false]}, {type: 2, stem: To test whether an object conforms to an interface, or type, at runtime -- i.e., whether an object is an instance of a class that implements an interface -- you use the _______________ operator which is similar to Java's instanceof operator. , answer: [is]}, {type: 2, stem: A _______________ is a class for use by other classes without having to be the parent class. It allows composition of classes at the source code level. You may compose multiple of these using the "with" keyword. , answer: [mixin, mix-in]}, {type: 2, stem: In Dart, you can override many operators such as +, -, and ==.  The only catch is that if you override the == operator, then you should also override the class's _______________ getter. , answer: [hashCode]}]}}